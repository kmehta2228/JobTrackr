// <auto-generated />
using System;
using JobTracker.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JobTracker.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250425224910_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JobTracker.API.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppliedDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            CompanyName = "Google",
                            Notes = "Referred by friend",
                            Role = "Software Engineer",
                            Status = "Applied"
                        },
                        new
                        {
                            Id = 2,
                            AppliedDate = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            CompanyName = "Microsoft",
                            Notes = "Phone screen done",
                            Role = "Cloud Engineer",
                            Status = "Interviewing"
                        },
                        new
                        {
                            Id = 3,
                            AppliedDate = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            CompanyName = "Amazon",
                            Notes = "No response",
                            Role = "Backend Developer",
                            Status = "Rejected"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
